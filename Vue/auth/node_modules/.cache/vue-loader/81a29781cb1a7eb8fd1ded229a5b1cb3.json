{"remainingRequest":"D:\\Python_Projects\\Vue\\auth\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Python_Projects\\Vue\\auth\\src\\components\\pages\\Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Python_Projects\\Vue\\auth\\src\\components\\pages\\Register.vue","mtime":1611830960418},{"path":"D:\\Python_Projects\\Vue\\auth\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Python_Projects\\Vue\\auth\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Python_Projects\\Vue\\auth\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Python_Projects\\Vue\\auth\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7cmVxdWlyZWQsIG1pbkxlbmd0aCwgZW1haWwsIHNhbWVBc30gZnJvbSAidnVlbGlkYXRlL2xpYi92YWxpZGF0b3JzIjsKCmV4cG9ydCBkZWZhdWx0IHsKICAgIGRhdGEgKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIHVzZXJEYXRhOnsKICAgICAgICAgICAgICAgIHVzZXJuYW1lOiAnJywKICAgICAgICAgICAgICAgIHBhc3N3b3JkOiAnJywKICAgICAgICAgICAgICAgIGNvbmZpcm1fcGFzc3dvcmQ6ICcnLAogICAgICAgICAgICAgICAgZW1haWw6ICcnLAogICAgICAgICAgICB9LAogICAgICAgICAgICBoYXNVc2VyOiB0cnVlLAogICAgICAgICAgICBzZXJ2ZXJNc2c6ICcnCiAgICAgICAgfQogICAgfSwKICAgIHZhbGlkYXRpb25zOiB7CiAgICAgICAgdXNlckRhdGE6ewogICAgICAgICAgICB1c2VybmFtZTogewogICAgICAgICAgICAgICAgcmVxdWlyZWQsCiAgICAgICAgICAgICAgICBtaW5MZW5ndGg6IG1pbkxlbmd0aCg0KSwKICAgICAgICAgICAgICAgIHVuaXFOYW1lOiAodXNlcm5hbWVfdmFsdWUpID0+IHsKICAgICAgICAgICAgICAgICAgICBpZiAodXNlcm5hbWVfdmFsdWUpewogICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWUKICAgICAgICAgICAgICAgICAgICB9ZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgZW1haWw6IHsKICAgICAgICAgICAgICAgIHJlcXVpcmVkLAogICAgICAgICAgICAgICAgZW1haWwsCiAgICAgICAgICAgICAgICB1bmlxRW1haWw6ICh1c2VybmFtZV92YWx1ZSkgPT4gewogICAgICAgICAgICAgICAgICAgIGlmICh1c2VybmFtZV92YWx1ZSl7CiAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZQogICAgICAgICAgICAgICAgICAgIH1lbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBwYXNzd29yZDogewogICAgICAgICAgICAgICAgcmVxdWlyZWQsCiAgICAgICAgICAgICAgICBtaW5MZW5ndGg6IG1pbkxlbmd0aCg2KQogICAgICAgICAgICB9LAogICAgICAgICAgICBjb25maXJtX3Bhc3N3b3JkOiB7CiAgICAgICAgICAgICAgICBzYW1lQXM6IHNhbWVBcygodnVlKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHZ1ZS5wYXNzd29yZAogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgYXN5bmMgcmVnaXN0ZXIoKSB7CiAgICAgICAgICAgIHZhciByZXNwb25zZSA9IGF3YWl0IGZldGNoKHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0RG9tZW4gKyAnYXV0aC91c2Vycy8nLCB7CiAgICAgICAgICAgICAgICBtZXRob2Q6ICdwb3N0JywKICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkodGhpcy51c2VyRGF0YSkKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIHRoaXMuaGFzVXNlciA9IHJlc3BvbnNlLnN0YXR1cyA9PT0gMjAxOwogICAgICAgICAgICBpZiAoIXRoaXMuaGFzVXNlcil7CiAgICAgICAgICAgICAgICB0aGlzLnNlcnZlck1zZyA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKQogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2V7CiAgICAgICAgICAgICAgICBhbGVydCgi0KHQvtC30LTQsNC9INC90L7QstGL0Lkg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GMISIpCiAgICAgICAgICAgICAgICB0aGlzLnVzZXJEYXRhLnVzZXJuYW1lID0gJycKICAgICAgICAgICAgICAgIHRoaXMudXNlckRhdGEucGFzc3dvcmQgPSAnJwogICAgICAgICAgICAgICAgdGhpcy51c2VyRGF0YS5jb25maXJtX3Bhc3N3b3JkID0gJycKICAgICAgICAgICAgICAgIHRoaXMudXNlckRhdGEuZW1haWwgPSAnJwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Register.vue","sourceRoot":"src/components/pages","sourcesContent":["<template>\r\n    <div>\r\n        <h1>Страница регистрации</h1>\r\n        <div class=\"alert alert-danger\" role=\"alert\" v-if=\"!hasUser\">\r\n            <div v-for=\"userMsg in serverMsg.username\" :key=\"userMsg\">\r\n                {{userMsg}}\r\n            </div>\r\n            <div v-for=\"userMsg in serverMsg.password\" :key=\"userMsg\">\r\n                {{userMsg}}\r\n            </div>\r\n        </div>\r\n        <form @submit.prevent=\"register()\">\r\n            <div class=\"form-group\">\r\n                <label for=\"username\">Имя пользователя</label>\r\n                <input\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    :class=\"{'is-invalid': $v.userData.username.$error}\"\r\n                    id=\"username\"\r\n                    name=\"username\"\r\n                    v-model=\"userData.username\"\r\n                    @blur=\"$v.userData.username.$touch()\"\r\n                >\r\n                <div class=\"invalid-feedback\" v-if=\"!$v.userData.username.required\">\r\n                    Поле \"Имя пользователя\" обязательно к заполнению\r\n                </div>\r\n                <div class=\"invalid-feedback\" v-if=\"!$v.userData.username.minLength\">\r\n                    Поле \"Имя пользователя\" должно состоять минимум из 4 символов\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"email\">Email</label>\r\n                <input\r\n                    type=\"email\"\r\n                    class=\"form-control\"\r\n                    :class=\"{'is-invalid': $v.userData.email.$error}\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    v-model=\"userData.email\"\r\n                    @blur=\"$v.userData.email.$touch()\"\r\n                >\r\n                <div class=\"invalid-feedback\" v-if=\"!$v.userData.email.required\">\r\n                    Поле \"Email\" обязательно к заполнению\r\n                </div>\r\n                <div class=\"invalid-feedback\" v-if=\"!$v.userData.email.email\">\r\n                    Поле \"Email\" не является адресом эл. почты\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"password\">Пароль</label>\r\n                <input\r\n                    type=\"password\"\r\n                    class=\"form-control\"\r\n                    :class=\"{'is-invalid': $v.userData.password.$error}\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    v-model=\"userData.password\"\r\n                    @blur=\"$v.userData.password.$touch()\"\r\n                >\r\n                <div class=\"invalid-feedback\" v-if=\"!$v.userData.password.required\">\r\n                    Поле \"Пароль\" обязательно к заполнению\r\n                </div>\r\n                <div class=\"invalid-feedback\" v-if=\"!$v.userData.password.minLength\">\r\n                    Поле \"Пароль\" должно состоять минимум из 6 символов\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"password2\">Повтор пароля</label>\r\n                <input\r\n                    type=\"password\"\r\n                    class=\"form-control\"\r\n                    :class=\"{'is-invalid': $v.userData.confirm_password.$error}\"\r\n                    id=\"password2\"\r\n                    name=\"password2\"\r\n                    v-model=\"userData.confirm_password\"\r\n                    @blur=\"$v.userData.confirm_password.$touch()\"\r\n                >\r\n                <div class=\"invalid-feedback\" v-if=\"!$v.userData.confirm_password.sameAs\">\r\n                    Поле \"Повтор пароля\" и поле \"Пароль\" должны совпадать\r\n                </div>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-primary\">Регистрация</button>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import {required, minLength, email, sameAs} from \"vuelidate/lib/validators\";\r\n\r\n    export default {\r\n        data () {\r\n            return {\r\n                userData:{\r\n                    username: '',\r\n                    password: '',\r\n                    confirm_password: '',\r\n                    email: '',\r\n                },\r\n                hasUser: true,\r\n                serverMsg: ''\r\n            }\r\n        },\r\n        validations: {\r\n            userData:{\r\n                username: {\r\n                    required,\r\n                    minLength: minLength(4),\r\n                    uniqName: (username_value) => {\r\n                        if (username_value){\r\n                             return true\r\n                        }else {\r\n                            return false\r\n                        }\r\n                    }\r\n                },\r\n                email: {\r\n                    required,\r\n                    email,\r\n                    uniqEmail: (username_value) => {\r\n                        if (username_value){\r\n                             return true\r\n                        }else {\r\n                            return false\r\n                        }\r\n                    }\r\n                },\r\n                password: {\r\n                    required,\r\n                    minLength: minLength(6)\r\n                },\r\n                confirm_password: {\r\n                    sameAs: sameAs((vue) => {\r\n                        return vue.password\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            async register() {\r\n                var response = await fetch(this.$store.getters.getDomen + 'auth/users/', {\r\n                    method: 'post',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(this.userData)\r\n                });\r\n                this.hasUser = response.status === 201;\r\n                if (!this.hasUser){\r\n                    this.serverMsg = await response.json()\r\n                }\r\n                else{\r\n                    alert(\"Создан новый пользователь!\")\r\n                    this.userData.username = ''\r\n                    this.userData.password = ''\r\n                    this.userData.confirm_password = ''\r\n                    this.userData.email = ''\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]}]}